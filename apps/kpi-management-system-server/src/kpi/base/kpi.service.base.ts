/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Kpi as PrismaKpi } from "@prisma/client";

export class KpiServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.KpiCountArgs, "select">): Promise<number> {
    return this.prisma.kpi.count(args);
  }

  async kpis(args: Prisma.KpiFindManyArgs): Promise<PrismaKpi[]> {
    return this.prisma.kpi.findMany(args);
  }
  async kpi(args: Prisma.KpiFindUniqueArgs): Promise<PrismaKpi | null> {
    return this.prisma.kpi.findUnique(args);
  }
  async createKpi(args: Prisma.KpiCreateArgs): Promise<PrismaKpi> {
    return this.prisma.kpi.create(args);
  }
  async updateKpi(args: Prisma.KpiUpdateArgs): Promise<PrismaKpi> {
    return this.prisma.kpi.update(args);
  }
  async deleteKpi(args: Prisma.KpiDeleteArgs): Promise<PrismaKpi> {
    return this.prisma.kpi.delete(args);
  }
}
