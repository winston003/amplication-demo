/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RankAdjustment as PrismaRankAdjustment,
  Rank as PrismaRank,
} from "@prisma/client";

export class RankAdjustmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RankAdjustmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.rankAdjustment.count(args);
  }

  async rankAdjustments(
    args: Prisma.RankAdjustmentFindManyArgs
  ): Promise<PrismaRankAdjustment[]> {
    return this.prisma.rankAdjustment.findMany(args);
  }
  async rankAdjustment(
    args: Prisma.RankAdjustmentFindUniqueArgs
  ): Promise<PrismaRankAdjustment | null> {
    return this.prisma.rankAdjustment.findUnique(args);
  }
  async createRankAdjustment(
    args: Prisma.RankAdjustmentCreateArgs
  ): Promise<PrismaRankAdjustment> {
    return this.prisma.rankAdjustment.create(args);
  }
  async updateRankAdjustment(
    args: Prisma.RankAdjustmentUpdateArgs
  ): Promise<PrismaRankAdjustment> {
    return this.prisma.rankAdjustment.update(args);
  }
  async deleteRankAdjustment(
    args: Prisma.RankAdjustmentDeleteArgs
  ): Promise<PrismaRankAdjustment> {
    return this.prisma.rankAdjustment.delete(args);
  }

  async getRank(parentId: string): Promise<PrismaRank | null> {
    return this.prisma.rankAdjustment
      .findUnique({
        where: { id: parentId },
      })
      .rank();
  }
}
