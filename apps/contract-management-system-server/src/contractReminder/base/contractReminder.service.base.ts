/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ContractReminder as PrismaContractReminder,
  Contract as PrismaContract,
} from "@prisma/client";

export class ContractReminderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContractReminderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contractReminder.count(args);
  }

  async contractReminders(
    args: Prisma.ContractReminderFindManyArgs
  ): Promise<PrismaContractReminder[]> {
    return this.prisma.contractReminder.findMany(args);
  }
  async contractReminder(
    args: Prisma.ContractReminderFindUniqueArgs
  ): Promise<PrismaContractReminder | null> {
    return this.prisma.contractReminder.findUnique(args);
  }
  async createContractReminder(
    args: Prisma.ContractReminderCreateArgs
  ): Promise<PrismaContractReminder> {
    return this.prisma.contractReminder.create(args);
  }
  async updateContractReminder(
    args: Prisma.ContractReminderUpdateArgs
  ): Promise<PrismaContractReminder> {
    return this.prisma.contractReminder.update(args);
  }
  async deleteContractReminder(
    args: Prisma.ContractReminderDeleteArgs
  ): Promise<PrismaContractReminder> {
    return this.prisma.contractReminder.delete(args);
  }

  async getContract(parentId: string): Promise<PrismaContract | null> {
    return this.prisma.contractReminder
      .findUnique({
        where: { id: parentId },
      })
      .contract();
  }
}
