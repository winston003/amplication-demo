/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ContractApprovalCreateNestedManyWithoutContractsInput } from "./ContractApprovalCreateNestedManyWithoutContractsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { ContractPerformanceCreateNestedManyWithoutContractsInput } from "./ContractPerformanceCreateNestedManyWithoutContractsInput";
import { ContractQueryCreateNestedManyWithoutContractsInput } from "./ContractQueryCreateNestedManyWithoutContractsInput";
import { ContractReminderCreateNestedManyWithoutContractsInput } from "./ContractReminderCreateNestedManyWithoutContractsInput";
import { ContractVersionCreateNestedManyWithoutContractsInput } from "./ContractVersionCreateNestedManyWithoutContractsInput";
import { EnumContractStatus } from "./EnumContractStatus";

@InputType()
class ContractCreateInput {
  @ApiProperty({
    required: false,
    type: () => ContractApprovalCreateNestedManyWithoutContractsInput,
  })
  @ValidateNested()
  @Type(() => ContractApprovalCreateNestedManyWithoutContractsInput)
  @IsOptional()
  @Field(() => ContractApprovalCreateNestedManyWithoutContractsInput, {
    nullable: true,
  })
  contractApprovals?: ContractApprovalCreateNestedManyWithoutContractsInput;

  @ApiProperty({
    required: false,
    type: () => ContractPerformanceCreateNestedManyWithoutContractsInput,
  })
  @ValidateNested()
  @Type(() => ContractPerformanceCreateNestedManyWithoutContractsInput)
  @IsOptional()
  @Field(() => ContractPerformanceCreateNestedManyWithoutContractsInput, {
    nullable: true,
  })
  contractPerformances?: ContractPerformanceCreateNestedManyWithoutContractsInput;

  @ApiProperty({
    required: false,
    type: () => ContractQueryCreateNestedManyWithoutContractsInput,
  })
  @ValidateNested()
  @Type(() => ContractQueryCreateNestedManyWithoutContractsInput)
  @IsOptional()
  @Field(() => ContractQueryCreateNestedManyWithoutContractsInput, {
    nullable: true,
  })
  contractQueries?: ContractQueryCreateNestedManyWithoutContractsInput;

  @ApiProperty({
    required: false,
    type: () => ContractReminderCreateNestedManyWithoutContractsInput,
  })
  @ValidateNested()
  @Type(() => ContractReminderCreateNestedManyWithoutContractsInput)
  @IsOptional()
  @Field(() => ContractReminderCreateNestedManyWithoutContractsInput, {
    nullable: true,
  })
  contractReminders?: ContractReminderCreateNestedManyWithoutContractsInput;

  @ApiProperty({
    required: false,
    type: () => ContractVersionCreateNestedManyWithoutContractsInput,
  })
  @ValidateNested()
  @Type(() => ContractVersionCreateNestedManyWithoutContractsInput)
  @IsOptional()
  @Field(() => ContractVersionCreateNestedManyWithoutContractsInput, {
    nullable: true,
  })
  contractVersions?: ContractVersionCreateNestedManyWithoutContractsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumContractStatus,
  })
  @IsEnum(EnumContractStatus)
  @IsOptional()
  @Field(() => EnumContractStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  template?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  version?: string | null;
}

export { ContractCreateInput as ContractCreateInput };
